{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-js-content-file-path-src-content-privacy-policy-mdx-16220da86c61d7f9321a.js","mappings":"mOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,4DAA6D,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,gKAAiK,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,KAAMK,EAAAA,cAAoBT,EAAYK,GAAI,KAAMI,EAAAA,cAAoBT,EAAYM,EAAG,CACxeI,KAAM,sBACL,sBAAuB,KAAMD,EAAAA,cAAoBT,EAAYK,GAAI,KAAMI,EAAAA,cAAoBT,EAAYM,EAAG,CAC3GI,KAAM,uBACL,qCAAsC,MAC3C,CAKA,MAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCdA,MAAMc,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAOP,EAAAA,cAAoBQ,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/BZ,EAAAA,cAAoB,KAAM,KAAMM,EAAKI,IAAIC,YAAYC,OAAQZ,EAAAA,cAAoB,UAAW,KAAMO,GAAU,EAYpGM,EAAOC,IAAA,IAAC,KAACR,GAAK,SAAKN,EAAAA,cAAoBe,EAAAA,EAAK,CACvDH,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASI,EAAiB1B,GACvC,OAAOU,EAAAA,cAAoBI,EAAUd,EAAOU,EAAAA,cAAoBiB,EAAqB3B,GACvF,C,sECOO,MAAM4B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBpB,GAC/B,MAAMqB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfnB,EACFA,EAAWqB,GAGb,IAAIA,KAAsBrB,IAChC,CAACqB,EAAmBrB,GACzB,C","sources":["webpack://gatsby-starter-default/./src/content/privacy-policy.mdx","webpack://gatsby-starter-default/./src/pages/{mdx.frontmatter__slug}.js","webpack://gatsby-starter-default/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"本プライバシーポリシーの日本語版と英語版との間に何らかの齟齬が発生する場合は、日本語版が優先されるものとします。\"), \"\\n\", React.createElement(_components.p, null, \"In case of any discrepancies or inconsistencies between the Japanese and English versions of the Privacy Policy, the Japanese version shall take precedence.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"/privacy-policy-jp\"\n  }, \"プライバシーポリシー (日本語版)\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"/privacy-policy-eng\"\n  }, \"Privacy Policy (English version)\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/GenieSlack/GenieSlack/web-server/src/content/privacy-policy.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(\"article\", null, children));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}